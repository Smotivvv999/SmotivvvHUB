local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

function gradient(text, startColor, endColor)
    local result = ""
    local length = #text

    for i = 1, length do
        local t = (i - 1) / math.max(length - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)

        local char = text:sub(i, i)
        result = result .. "<font color=\"rgb(" .. r .. ", " .. g .. ", " .. b .. ")\">" .. char .. "</font>"
    end

    return result
end

local Confirmed = false

local Window = WindUI:CreateWindow({
    Title = "SuperStarHub || Premium  -  v1.1.0",
    Icon = "slack",
    Author = "by smotivvv.",
    Folder = "StrixHub | Premium  -  v1.1.0",
    Size = UDim2.fromOffset(580, 250),
    Transparent = true,
    Theme = "Dark",
    User = {
        Enabled = false, -- <- or false
        Callback = function() print("clicked") end, -- <- optional
    },
})

local Tab = Window:Tab({
    Title = "Autofarm",
    Icon = "plane-takeoff",
    Locked = false,
})

local Section = Tab:Section({ 
    Title = "Autofarm [Car Driving Indonesia]",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local Paragraph = Tab:Paragraph({
    Title = "Autofarm Information",
    Desc = "Autofarm sudah sepenuhnya diatur dan siap digunakan. Kamu tinggal tekan start untuk memulai prosesnya tanpa repot.",
    Image = "info",
    ImageSize = 30,
    ThumbnailSize = 10
})

local Player = game.Players.LocalPlayer
local CarName = Player.Name .. "sCar"
local TweenService = game:GetService("TweenService")
local Vim = game:GetService("VirtualInputManager")
local autofarmActive = false

_G.getFormattedDateTime = function()
    return os.date("%d-%m-%Y") .. " | " .. os.date("%H:%M:%S")
end

_G.startDateTimeUpdater = function(paragraph)
    task.spawn(function()
        while true do
            if paragraph and paragraph.SetDesc then
                paragraph:SetDesc(_G.getFormattedDateTime())
            end
            task.wait(1)
        end
    end)
end

-- Tambahan variabel untuk waktu
local startTime
local paragraphTimer -- ini akan menyimpan referensi Paragraph waktu

local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = seconds % 60
    return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

-- Fungsi mulai timer AutoFarm
local function StartAutoFarmTimer()
    startTime = tick()
    task.spawn(function()
        while autofarmActive and paragraphTimer do
            local elapsed = math.floor(tick() - startTime)
            paragraphTimer:SetDesc("Durasi AutoFarm: " .. formatTime(elapsed))
            task.wait(1)
        end
    end)
end

-- Fungsi berhenti timer
local function StopAutoFarmTimer()
    local totalTime = math.floor(tick() - startTime)
    if paragraphTimer then
        paragraphTimer:SetDesc("AutoFarm selesai. Total waktu: " .. formatTime(totalTime))
    end
end

local function safeWait(min, max)
    task.wait(min + math.random() * (max - min))
end

local function SafeTween(part, targetCFrame, time, style)
    if not part then return end
    local tweenInfo = TweenInfo.new(time or 1, style or Enum.EasingStyle.Sine)
    local success, tween = pcall(function()
        return TweenService:Create(part, tweenInfo, {CFrame = targetCFrame})
    end)
    if not success or not tween then return end

    tween:Play()
    tween.Completed:Wait()
end

local function WaitForRootPart(timeout)
    timeout = timeout or 5
    local root
    local t = 0
    repeat
        root = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        if root then break end
        task.wait(0.1)
        t = t + 0.1
    until t >= timeout
    return root
end

local function TweenToJob()
    local success, err = pcall(function()
        game.ReplicatedStorage.NetworkContainer.RemoteEvents.Job:FireServer("Truck")
    end)
    if not success then
        warn("Failed to fire job event:", err)
        return
    end

    local Root = WaitForRootPart(5)
    if not Root then
        warn("HumanoidRootPart not found.")
        return
    end

    SafeTween(Root, Root.CFrame + Vector3.new(0, 100, 0), 0.5, Enum.EasingStyle.Quad)
    safeWait(0.2, 0.3)
    SafeTween(Root, CFrame.new(-21799.8, 1142.65, -26797.7), 1, Enum.EasingStyle.Quad)
    safeWait(0.2, 0.3)
    SafeTween(Root, CFrame.new(-21799.8, 1042.65, -26797.7), 1, Enum.EasingStyle.Exponential)
    safeWait(0.2, 0.4)
end

local function TakingJob()
    repeat
        local Root = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        local Label = workspace:FindFirstChild("Etc") and workspace.Etc:FindFirstChild("Waypoint") and workspace.Etc.Waypoint:FindFirstChild("Waypoint")
        Label = Label and Label:FindFirstChild("BillboardGui") and Label.BillboardGui:FindFirstChild("TextLabel")

        if Root then Root.Anchored = true end

        if Label and Label.Text ~= "Rojod Semarang" then
            local ok, err = pcall(function()
                game.ReplicatedStorage.NetworkContainer.RemoteEvents.Job:FireServer("Truck")
            end)
            if not ok then warn("FireServer Job failed:", err) end

            safeWait(1, 2)

            local Prompt = workspace:FindFirstChild("Etc") and workspace.Etc:FindFirstChild("Job") and workspace.Etc.Job:FindFirstChild("Truck") and workspace.Etc.Job.Truck:FindFirstChild("Starter")
            if Prompt then
                Prompt = Prompt:FindFirstChildWhichIsA("ProximityPrompt", true)
                if Prompt then
                    Prompt.MaxActivationDistance = 50
                    local ok2, err2 = pcall(function() fireproximityprompt(Prompt) end)
                    if not ok2 then warn("fireproximityprompt error:", err2) end
                end
            end
        end

        if Root then Root.Anchored = false end
        safeWait(0.5, 1)
    until Label and Label.Text == "Rojod Semarang" or not autofarmActive
end

local function SpawningTruck()
    local Root = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not Root then return end

    Root.CFrame = CFrame.new(-21782.941, 1042.03, -26786.959)
    safeWait(1.5, 2)

    if Vim then
        Vim:SendKeyEvent(true, "F", false, game)
        safeWait(0.2, 0.3)
        Vim:SendKeyEvent(false, "F", false, game)
        safeWait(4.5, 5)
    else
        warn("VirtualInputManager not found")
    end

    local Car = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(CarName)
    local Humanoid = Player.Character and Player.Character:FindFirstChild("Humanoid")
    local Seat = Car and Car:FindFirstChild("DriveSeat")

    if Humanoid and Seat then
        pcall(function() Seat:Sit(Humanoid) end)
        safeWait(0.3, 0.6)
        if Vim then
            Vim:SendKeyEvent(true, "Space", false, game)
            safeWait(0.1, 0.2)
            Vim:SendKeyEvent(false, "Space", false, game)
        end
    end

    local Trailer = Car and Car:FindFirstChild("Trailer1")
    if Trailer then
        pcall(function() Trailer:Destroy() end)
    end
end

local function MovingCharacterToDestination(Destination)
    local Root = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    local Car = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(CarName)
    if not (Root and Car) then return end

    -- Notifikasi saat memulai teleportasi ke tujuan
    WindUI:Notify({
        Title = "Teleporting...",
        Content = "Go to rojod semarang...",
        Icon = "plane-takeoff",
        Duration = 5,
    })

    if not Car.PrimaryPart then
        for _, part in ipairs(Car:GetDescendants()) do
            if part:IsA("BasePart") then
                Car.PrimaryPart = part
                break
            end
        end
    end

    local follow = true
    task.spawn(function()
        while follow and Car.PrimaryPart do
            Car:PivotTo(Root.CFrame + Vector3.new(5, 0, 0))
            task.wait(0.4)
        end
    end)

    SafeTween(Root, Root.CFrame + Vector3.new(0, 100, 0), 0.4)
    safeWait(0.1, 0.2)
    SafeTween(Root, CFrame.new(Destination.Position + Vector3.new(0, 100, 0)), 1.6)
    safeWait(0.1, 0.2)
    SafeTween(Root, Destination, 1.8)

    follow = false
    Root.Anchored = true
    if Car.PrimaryPart then Car.PrimaryPart.Anchored = true end
    safeWait(0.6, 0.9)
    if Car.PrimaryPart then Car.PrimaryPart.Anchored = false end
    Root.Anchored = false
end

local function CountdownTeleport(seconds)
    WindUI:Notify({
        Title = "Countdown Started",
        Content = "Teleporting in " .. seconds .. " seconds...",
        Icon = "chart-pie",
        Duration = 4,
    })

    for i = seconds, 1, -1 do
        if _G.ParagraphAutoFarmTimer then
            _G.ParagraphAutoFarmTimer:SetDesc("Teleporting dalam " .. i .. " detik")
        end
        print("Teleporting in " .. i .. "s")
        task.wait(1)
    end

    if _G.ParagraphAutoFarmTimer then
        _G.ParagraphAutoFarmTimer:SetDesc("Teleportasi dimulai!")
    end
end

local function SitInVehicle()
    local Car = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(CarName)
    local Hum = Player.Character and Player.Character:FindFirstChild("Humanoid")
    local Seat = Car and Car:FindFirstChild("DriveSeat")
    if Hum and Seat then
        pcall(function() Seat:Sit(Hum) end)
    end
end

local function CarTween(TargetCFrame)
    local Car = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(CarName)
    if not Car then return end

    if not Car.PrimaryPart then
        local Seat = Car:FindFirstChild("DriveSeat")
        if Seat then
            Car.PrimaryPart = Seat
        else
            return
        end
    end

    local temp = Instance.new("CFrameValue", workspace)
    temp.Value = Car:GetPivot()

    local tween = TweenService:Create(temp, TweenInfo.new(3, Enum.EasingStyle.Linear), {
        Value = TargetCFrame
    })

    temp:GetPropertyChangedSignal("Value"):Connect(function()
        Car:PivotTo(temp.Value)
    end)

    tween:Play()
    tween.Completed:Wait()
    temp:Destroy()

    safeWait(0.2, 0.3)
end

Tab:Toggle({
    Title = "Start Autofarm Safe",
    Type = "Toggle",
    Default = false,
    Callback = function(state)
        autofarmActive = state

        if autofarmActive then
            print("Autofarm started.")
            StartAutoFarmTimer()

            task.spawn(function()
                while autofarmActive do
                    TweenToJob()
                    safeWait(0.5, 1)
                    TakingJob()
                    safeWait(0.5, 1)
                    SpawningTruck()
                    safeWait(0.5, 1)
                    MovingCharacterToDestination(CFrame.new(-50937.152, 1012.215, -86353.031))
                    safeWait(0.5, 1)
                    CountdownTeleport(40)  -- akan update paragraph di dalamnya
                    safeWait(0.5, 1)
                    SitInVehicle()
                    safeWait(0.5, 1)
                    CarTween(CFrame.new(-50899.6015625, 1013.977783203125, -86534.9765625))
                    safeWait(1, 2)
                end
                print("Autofarm stopped.")
            end)
        else
            StopAutoFarmTimer()
            print("Autofarm deactivated.")
        end
    end
})

local Section = Tab:Section({ 
    Title = "Autofarm Configuration",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local optimizeMode = false
local pingThreshold = 150 -- batas ping ms
local checkInterval = 5 -- cek ping tiap 5 detik

-- Fungsi dapatkan ping Roblox (ms)
local function getPing()
    local stats = game:GetService("Stats")
    local network = stats.NetworkServerStatsItem
    if network then
        return network.Latency * 1000 -- detik ke ms
    end
    return 0
end

-- Fungsi aktifkan optimize mode
local function applyOptimizeMode()
    if optimizeMode then return end
    optimizeMode = true
    print("[OptimizeMode] Activated")

    pcall(function()
        local lighting = game:GetService("Lighting")
        lighting.GlobalShadows = false
        lighting.FogEnd = 1000

        local userSettings = settings():GetService("UserGameSettings")
        userSettings.VideoQualityLevel = 1
        if setfpscap then setfpscap(30) end

        -- Optimasi FPS & Rendering
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        settings().Rendering.EditQualityLevel = Enum.QualityLevel.Level01
        settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Low

        -- Matikan efek grafis berat
        for _, v in pairs(lighting:GetDescendants()) do
            if v:IsA("PostEffect") or v:IsA("BloomEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") then
                v.Enabled = false
            end
        end

        -- Optimasi terrain & water
        if workspace:FindFirstChildOfClass("Terrain") then
            local terrain = workspace.Terrain
            terrain.WaterWaveSize = 0
            terrain.WaterWaveSpeed = 0
            terrain.WaterReflectance = 0
            terrain.WaterTransparency = 1
        end

        -- Kurangi physics & streaming
        settings().Physics.AllowSleep = true
        workspace.StreamingEnabled = true

        -- Nonaktifkan ParticleEmitter, Trail, dan Smoke di workspace
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") then
                obj.Enabled = false
            end
        end

        -- Optimasi GUI (matikan CoreGui)
        game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
    end)
end

-- Fungsi matikan optimize mode (balik normal)
local function revertOptimizeMode()
    if not optimizeMode then return end
    optimizeMode = false
    print("[OptimizeMode] Deactivated")

    pcall(function()
        local lighting = game:GetService("Lighting")
        lighting.GlobalShadows = true
        lighting.FogEnd = 100000

        local userSettings = settings():GetService("UserGameSettings")
        userSettings.VideoQualityLevel = 10
        if setfpscap then setfpscap(60) end

        -- Kembalikan efek grafis
        for _, v in pairs(lighting:GetDescendants()) do
            if v:IsA("PostEffect") or v:IsA("BloomEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") then
                v.Enabled = true
            end
        end

        -- Kembalikan terrain & water
        if workspace:FindFirstChildOfClass("Terrain") then
            local terrain = workspace.Terrain
            terrain.WaterWaveSize = 1
            terrain.WaterWaveSpeed = 1
            terrain.WaterReflectance = 0.2
            terrain.WaterTransparency = 0
        end

        -- Kembalikan physics & streaming
        settings().Physics.AllowSleep = false
        workspace.StreamingEnabled = false

        -- Aktifkan lagi ParticleEmitter, Trail, dan Smoke
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") then
                obj.Enabled = true
            end
        end

        -- Aktifkan kembali CoreGui
        game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
    end)
end

local Toggle = Tab:Toggle({
    Title = "Optimize Performance Mode",
    Desc = "Reduce lag by improving fps, ping, cpu, and memory usage.",
    Default = false,
    Callback = function(state)
        if state then
            Window:Dialog({
                Title = "Optimize Mode",
                Content = "Performance mode has been activated.",
                Icon = "circle-check",
                Buttons = {
                    {
                        Title = "OK",
                        Variant = "Secondary",
                        Callback = function() print("OK pressed") end,
                    },
                },
            })

            -- Start loop cek ping dan optimize otomatis
            task.spawn(function()
                while Tab:GetToggleState("Optimize Performance Mode") do
                    local ping = getPing()
                    print("[PingCheck] Current ping: " .. ping .. " ms")

                    if ping > pingThreshold then
                        applyOptimizeMode()
                    else
                        revertOptimizeMode()
                    end

                    task.wait(checkInterval)
                end

                -- Pastikan mode off saat toggle dimatikan
                revertOptimizeMode()
            end)

        else
            Window:Dialog({
                Title = "Optimize Mode Off",
                Content = "Performance mode has been turned off.",
                Icon = "circle-check",
                Buttons = {
                    {
                        Title = "OK",
                        Variant = "Secondary",
                    },
                },
            })
            revertOptimizeMode()
        end
    end,
})

local Toggle = Tab:Toggle({
    Title = "Optimize Ping Based Mode", 
    Desc = "Minimizes lag and stabilizes connection for smoother and more responsive gameplay.", 
    Callback = function(state)
        if state then
            Window:Dialog({
                Title = "Optimize Mode",
                Content = "Successfully activated optimize mode.",
                Icon = "circle-check",
                Buttons = {
                    {
                        Title = "OK",
                        Variant = "Secondary",
                        Callback = function()
                            print("OK pressed")
                        end,
                    },
                },
            })

            -- Start loop cek ping
            task.spawn(function()
                while Tab:GetToggleState("Optimize Ping Based Mode") do
                    local ping = getPing()
                    print("[PingCheck] Current ping: " .. ping .. " ms")
                    if ping > pingThreshold then
                        applyOptimizeMode()
                    else
                        revertOptimizeMode()
                    end
                    task.wait(checkInterval)
                end
                revertOptimizeMode() -- pastikan optimize dimatikan saat toggle off
            end)
        else
            revertOptimizeMode()
        end
    end,
})

local Tab = Window:Tab({
    Title = "Stats",
    Icon = "chart-line",
    Locked = false,
})

local Section = Tab:Section({ 
    Title = "Autofarm Status",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

paragraphTimer = Tab:Paragraph({
    Title = "Elapsed Time",
    Desc = "Please Start Autofarm",
    Image = "clock",
    ImageSize = 30,
    ThumbnailSize = 10
})

_G.ParagraphAutoFarmTimer = Tab:Paragraph({
    Title = "Autofarm Statistics",
    Desc = "Please Start Autofarm",
    Image = "chart-pie",
    ImageSize = 30,
    ThumbnailSize = 10
})

_G.paragraphTimer = Tab:Paragraph({
    Title = "Date & Time",
    Desc = _G.getFormattedDateTime(),
    Image = "calendar-clock",
    ImageSize = 30,
    ThumbnailSize = 10
})

_G.startDateTimeUpdater(_G.paragraphTimer)
